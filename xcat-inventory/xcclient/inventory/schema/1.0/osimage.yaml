!!python/dict
  osimage:
    imagetype:
    - "T{osimage.imagetype}"
    - "W:T{winimage.imagename}=${{imgtype=V{imagetype}: V{obj_name} if imgtype == 'windows' else None }}"
    - "W:T{osimage.imagename}=${{imgtype=V{imagetype}: V{obj_name} if imgtype == 'linux' else None }}"
    basic_attributes:
      distribution: "T{osimage.osvers}"
      arch: "T{osimage.osarch}"
      osdistro: "T{osimage.osdistroname}"
      osname: "T{osimage.osname}"
      description: "T{osimage.description}"
      groups: "T{osimage.groups}"
    role: "T{osimage.profile}"
    provision_mode: "T{osimage.provmethod}"
    package_selection:
      pkglist: "T{linuximage.pkglist}"
      pkgdir: "T{linuximage.pkgdir}"
      otherpkglist: "T{linuximage.otherpkglist}"
      otherpkgdir: "T{linuximage.otherpkgdir}"
    osupdatename: "T{osimage.osupdatename}"
    kernel_driver:
      driverupdatesrc: "T{linuximage.driverupdatesrc}"
      netdrivers: "T{linuximage.netdrivers}"
      kerneldir: "T{linuximage.kerneldir}"
      kernelver: "T{linuximage.kernelver}"
    scripts:
      postscripts: "T{osimage.postscripts}"
      postbootscripts: "T{osimage.postbootscripts}"
    kernel_dump:
      dump: "${{imagetype=V{imagetype},provmode=V{provision_mode}: T{linuximage.dump} if imagetype == 'linux' and provmode !='install' else None}}"
      crashkernelsize: "${{imagetype=V{imagetype},provmode=V{provision_mode}: T{linuximage.crashkernelsize} if imagetype == 'linux' and provmode !='install' else None}}"
    template: "${{imagetype=V{imagetype} :T{winimage.template} if imagetype == 'windows' else T{linuximage.template} if imagetype == 'linux' else None }} "
    diskpartitionspec: "${{imagetype=V{imagetype} :T{linuximage.partitionfile} if imagetype == 'linux' else T{winimage.partitionfile} if imagetype == 'windows' else None}}"
    filestosync: "T{osimage.synclists}"
    addkcmdline: "T{linuximage.addkcmdline}"
    boottarget: "T{linuximage.boottarget}"                                 
    genimgoptions:
      exlist: "T{linuximage.exlist}"
      postinstall: "T{linuximage.postinstall}"
      rootimgdir: "T{linuximage.rootimgdir}"
      nodebootif: "T{linuximage.nodebootif}"
      permission: "T{linuximage.permission}"
      rootfstype: "T{osimage.rootfstype}"
      installto: "${{imagetype=V{imagetype} :T{winimage.installto} if imagetype == 'windows' else None }}"
      winpepath: "${{imagetype=V{imagetype} :T{winimage.winpepath}  if imagetype == 'windows' else None }}"
    deprecated:
      nimimageshared_home: "T{nimimage.shared_home}"
      nimimageconfigdump: "T{nimimage.configdump}"
      nimimagespot: "T{nimimage.spot}"
      nimimagenimtype: "T{nimimage.nimtype}"
      nimimagemksysb: "T{nimimage.mksysb}"
      nimimagehome: "T{nimimage.home}"
      nimimagenimmethod: "T{nimimage.nimmethod}"
      nimimagefb_script: "T{nimimage.fb_script}"
      nimimagedump: "T{nimimage.dump}"
      osimagecfmdir: "T{osimage.cfmdir}"
      nimimagecomments: "T{nimimage.comments}"
      osimageserverrole: "T{osimage.serverrole}"
      nimimageroot: "T{nimimage.root}"
      nimimageinstallp_bundle: "T{nimimage.installp_bundle}"
      nimimageotherpkgs: "T{nimimage.otherpkgs}"
      nimimageresolv_conf: "T{nimimage.resolv_conf}"
      nimimagepaging: "T{nimimage.paging}"
      nimimagescript: "T{nimimage.script}"
      nimimageshared_root: "T{nimimage.shared_root}"
      nimimagebosinst_data: "T{nimimage.bosinst_data}"
      nimimagelpp_source: "T{nimimage.lpp_source}"
      osimagekitcomponents: "T{osimage.kitcomponents}"
      nimimageimage_data: "T{nimimage.image_data}"
      osimageisdeletable: "T{osimage.isdeletable}"
      nimimagetmp: "T{nimimage.tmp}"
      linuximageotherifce: "T{linuximage.otherifce}"
      linuximagecomments: "T{linuximage.comments}"
      linuximagekrpmver: "T{linuximage.krpmver}"
